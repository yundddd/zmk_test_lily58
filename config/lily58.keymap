/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

/*
/ {
	combos {
        compatible = "zmk,combos";
        combo_LPAR {
            timeout-ms = <10>;
            key-positions = <19 20>;
            bindings = <&kp LPAR>;
        };
		combo_RPAR {
            timeout-ms = <10>;
            key-positions = <20 21>;
            bindings = <&kp RPAR>;
        };
		combo_LBKT {
            timeout-ms = <10>;
            key-positions = <31 32>;
            bindings = <&kp LBKT>;
        };
		combo_RBKT {
            timeout-ms = <10>;
            key-positions = <32 33>;
            bindings = <&kp RBKT>;
        };
		combo_LBRC {
            timeout-ms = <10>;
            key-positions = <45 46>;
            bindings = <&kp LBRC>;
        };
		combo_RBRC {
            timeout-ms = <10>;
            key-positions = <46 47>;
            bindings = <&kp RBRC>;
        };
		
	};
};
*/

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        se: shift_enter {
            compatible = "zmk,behavior-hold-tap";
            label = "SHIFT_ENTER";
            #binding-cells = <2>;
            tapping-term-ms = <120>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        al: alt_layer {
            compatible = "zmk,behavior-hold-tap";
            label = "ALT_LAYER";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&mo>, <&kp>;
        };
    };
};

/ {
    macros {
        shift_ins: shift_ins {
            label = "ZM_shift_ins";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LSHFT>,
                <&macro_tap>,
                <&kp INS>,
                <&macro_release>,
                <&kp LSHFT>;
        };
    };
};

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   -   |
            // |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   =   |
            // |  CTRL |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |   "["  |  |  "]"  |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //                     | ALT  | LOWER| DEL  |  ENTER |  | SPACE | BSPC | UPPER | ALT   |

            bindings = <
&hm ESC GRAVE  &kp N1  &kp N2  &kp N3    &kp N4            &kp N5                                  &kp N6        &kp N7            &kp N8             &kp N9   &kp N0    &kp MINUS
&kp TAB        &kp Q   &kp W   &kp E     &kp R             &kp T                                   &kp Y         &kp U             &kp I              &kp O    &kp P     &kp EQUAL
&kp LCTRL      &kp A   &kp S   &kp D     &kp F             &kp G                                   &kp H         &kp J             &kp K              &kp L    &kp SEMI  &kp SQT
&kp LSHFT      &kp Z   &kp X   &kp C     &kp V             &kp B            &kp LBKT     &kp RBKT  &kp N         &kp M             &kp COMMA          &kp DOT  &kp FSLH  &kp BACKSLASH
                               &kp LALT  &kp LEFT_COMMAND  &al 1 BACKSPACE  &kp SPACE    &kp RET   &al 2 DELETE  &kp LEFT_BRACKET  &kp RIGHT_BRACKET
            >;

            sensor-bindings = <&inc_dec_kp RIGHT LEFT>;
            sensor-bindings = <&inc_dec_kp UP DOWN>;
        };

        lower_layer {
            // ------------------------------------------------------------------------------------------------------------
            // | BTCLR | BT1 | BT2 |  BT3 |  BT4 |  BT5 |                   |      |       |       |      |       |       |
            // |  F1   |  F2 |  F3 |  F4  |  F5  |  F6  |                   |  F7  |  F8   |  F9   |  F10 |  F11  |  F12  |
            // |   `   |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   ~   |
            // |       |     |     |      |      |      | SH+INS |  |       |      |  _    |  +    |  {   |   }   |  "|"  |
            //                     |      |      |      |        |  |       |      |       |       |

            bindings = <
&bt BT_CLR  &bt BT_SEL 0      &bt BT_SEL 1       &bt BT_SEL 2       &bt BT_SEL 3  &bt BT_SEL 4                        &trans     &trans     &trans           &trans    &trans    &trans
&kp F1      &kp F2            &kp F3             &kp F4             &kp F5        &kp F6                              &kp F7     &kp F8     &kp F9           &kp F10   &kp F11   &kp F12
&kp GRAVE   &kp EXCL          &kp AT             &kp HASH           &kp DOLLAR    &kp PRCNT                           &kp CARET  &kp AMPS   &kp KP_MULTIPLY  &kp LPAR  &kp RPAR  &kp TILDE
&trans      &ext_power EP_ON  &ext_power EP_OFF  &ext_power EP_TOG  &out OUT_USB  &out OUT_BLE  &shift_ins    &trans  &trans     &kp MINUS  &kp KP_PLUS      &kp LBRC  &kp RBRC  &kp PIPE
                                                 &trans             &trans        &trans        &trans        &trans  &trans     &trans     &trans
            >;

            sensor-bindings = <&inc_dec_kp RIGHT LEFT &inc_dec_kp UP DOWN>;
        };

        raise_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |       |  F1 | F2  |  F3  |  F4  |  F5  |                   |  F6  |   F7  |   F8  |  F9  |   F10 |   F11 |
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |  Home |   ^   |  End |   0   |   F12 |
            // |  CTRL |  F2 |  F3 |  F4  |  F5  |  F6  |                   |      |   <-  |   v   |  ->  |  ->   |       |
            // | SHIFT |  F8 |  F9 |  F10 |  F11 |  F12 |        |  |       |  +   |   -   |   =   |  [   |   \   | SHIFT |
            //                     | ALT  | DEL  | ENTER| 		 |  | 		| SPACE| BSPC  | ALT   |

            bindings = <
&trans     &kp F1  &kp F2  &kp F3    &kp F4   &kp F5                     &kp F6       &kp F7     &kp F8     &kp F9     &kp F10    &kp F11
&kp GRAVE  &kp N1  &kp N2  &kp N3    &kp N4   &kp N5                     &kp N6       &kp HOME   &kp UP     &kp END    &kp N0     &kp F12
&kp LCTRL  &kp F2  &kp F3  &kp F4    &kp F5   &kp F6                     &trans       &kp LEFT   &kp DOWN   &kp RIGHT  &kp RIGHT  &trans
&kp LSHFT  &kp F8  &kp F9  &kp F10   &kp F11  &kp F12  &trans    &trans  &kp KP_PLUS  &kp MINUS  &kp EQUAL  &kp LBKT   &kp BSLH   &kp LSHFT
                           &kp LALT  &kp DEL  &kp RET  &trans    &trans  &kp SPACE    &kp BSPC   &kp RALT
            >;

            sensor-bindings = <&inc_dec_kp RIGHT LEFT &inc_dec_kp UP DOWN>;
        };
    };
};
